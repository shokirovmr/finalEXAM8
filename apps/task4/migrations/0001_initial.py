# Generated by Django 5.0.3 on 2024-03-30 17:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Championship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("season", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Coach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("coach_name", models.CharField(max_length=35)),
                ("coach_age", models.PositiveIntegerField()),
                ("coach_nationality", models.CharField(max_length=20)),
                ("coach_experience", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("player_name", models.CharField(max_length=30)),
                ("player_age", models.PositiveIntegerField()),
                ("player_nationality", models.CharField(max_length=20)),
                ("player_position", models.CharField(max_length=15)),
                ("player_yellowcards", models.PositiveIntegerField()),
                ("player_redcards", models.PositiveIntegerField()),
                ("market_value", models.PositiveIntegerField()),
                ("contract_expiration", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("home_team_score", models.PositiveIntegerField()),
                ("away_team_score", models.PositiveIntegerField()),
                (
                    "championship",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="task4.championship",
                    ),
                ),
                (
                    "away_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="away_matches",
                        to="task4.team",
                    ),
                ),
                (
                    "home_team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="home_matches",
                        to="task4.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MatchStatistic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("home_team_possession", models.FloatField()),
                ("away_team_possession", models.FloatField()),
                ("home_team_goal_attempts", models.PositiveIntegerField()),
                ("away_team_goal_attempts", models.PositiveIntegerField()),
                ("home_team_shots_on_goal", models.PositiveIntegerField()),
                ("away_team_shots_on_goal", models.PositiveIntegerField()),
                ("home_team_shots_off_goal", models.PositiveIntegerField()),
                ("away_team_shots_off_goal", models.PositiveIntegerField()),
                ("home_team_free_kicks", models.IntegerField()),
                ("away_team_free_kicks", models.IntegerField()),
                ("home_team_corner_kicks", models.IntegerField()),
                ("away_team_corner_kicks", models.IntegerField()),
                ("home_team_offsides", models.IntegerField()),
                ("away_team_offsides", models.IntegerField()),
                ("home_team_throw_ins", models.IntegerField()),
                ("away_team_throw_ins", models.IntegerField()),
                ("home_team_goalkeeper_saves", models.IntegerField()),
                ("away_team_goalkeeper_saves", models.IntegerField()),
                ("home_team_fouls", models.IntegerField()),
                ("away_team_fouls", models.IntegerField()),
                ("home_team_tackles", models.IntegerField()),
                ("away_team_tackles", models.IntegerField()),
                ("home_team_attacks", models.IntegerField()),
                ("away_team_attacks", models.IntegerField()),
                ("home_team_dangerous_attacks", models.IntegerField()),
                ("away_team_dangerous_attacks", models.IntegerField()),
                ("home_team_clearances_completed", models.IntegerField()),
                ("away_team_clearances_completed", models.IntegerField()),
                ("home_team_yellow_cards", models.IntegerField()),
                ("away_team_yellow_cards", models.IntegerField()),
                ("home_team_red_cards", models.IntegerField()),
                ("away_team_red_cards", models.IntegerField()),
                ("home_team_total_passes", models.IntegerField()),
                ("away_team_total_passes", models.IntegerField()),
                (
                    "match",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="task4.match"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Standings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("match_starts", models.DateTimeField()),
                ("points", models.PositiveIntegerField()),
                ("match_count", models.PositiveIntegerField()),
                (
                    "squad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_standing_name",
                        to="task4.player",
                    ),
                ),
                (
                    "team_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="team_standing_name",
                        to="task4.team",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="player",
            name="player_team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="player_name",
                to="task4.team",
            ),
        ),
    ]
